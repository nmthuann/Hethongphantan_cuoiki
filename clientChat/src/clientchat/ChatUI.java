/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clientchat;

import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author MEP-LAPTOP
 */
public class ChatUI extends javax.swing.JFrame {
    
    static ChatUI instance = null;
    Thread thread;
    SimpleAttributeSet another = new SimpleAttributeSet();
    SimpleAttributeSet me = new SimpleAttributeSet();
    StyledDocument doc = null;
    public static ChatUI getInstance()
    {
        if (instance == null)
            return instance = new ChatUI();
        return instance;
    }
    /**
     * Creates new form chatNew
     */
    public ChatUI() {
        StyleConstants.setAlignment(another, StyleConstants.ALIGN_LEFT);
        StyleConstants.setForeground(another, Color.RED);
        StyleConstants.setFontSize(another, 18);
        StyleConstants.setAlignment(me, StyleConstants.ALIGN_LEFT);
        StyleConstants.setForeground(me, Color.BLUE);
        StyleConstants.setFontSize(me, 18);
        initComponents();
        doc = displayChatPanel.getStyledDocument();
        nametxt.setText(clientThread.getInstance().getNameSV());
        //mssvtxt.setText(clientThread.getInstance().getMssvSV().trim().toUpperCase());
        coderoom.setText("ROOM: "+clientThread.getInstance().getCodeRoom());
        thread = new Thread(new Runnable() {
            @Override
            public void run() 
            {                                
                while (true)
                {
                    try {
                        if (clientThread.getInstance().getSocket() != null)
                        {
                            String msg = "";
                            msg = clientThread.getInstance().getDin().readUTF().trim();
                            if (!msg.equals("")) {
                                doc.insertString(doc.getLength(),msg +"\n" , another);
                                doc.setParagraphAttributes(doc.getLength(), 1, another, false);
                            }
                            
                        }
                    } catch (BadLocationException ex) {
                        JOptionPane.showMessageDialog(null, ex, "Error" , JOptionPane.ERROR_MESSAGE);
                        break;
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, ex, "Error" , JOptionPane.ERROR_MESSAGE);                        
                        break;
                    }
                }
            }
        }); 
        thread.start();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SENDbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nametxt = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        chatF = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayChatPanel = new javax.swing.JTextPane();
        coderoom = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Online");

        SENDbutton.setText("Send");
        SENDbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SENDbuttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setText("Username:");

        nametxt.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        nametxt.setForeground(new java.awt.Color(51, 51, 51));
        nametxt.setText("username");

        chatF.setColumns(20);
        chatF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chatF.setRows(5);
        jScrollPane3.setViewportView(chatF);

        displayChatPanel.setEditable(false);
        jScrollPane1.setViewportView(displayChatPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(SENDbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(coderoom, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nametxt)))
                    .addComponent(coderoom, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SENDbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SENDbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SENDbuttonActionPerformed
        // TODO add your handling code here:
        String msg = chatF.getText();
        if (msg.isEmpty()) return;
        try {
            
            clientThread.getInstance().getDout().writeUTF(msg);         
            chatF.setText("");
            String[] strTemps = msg.split("\n");
            if (strTemps.length == 0) return;
            if (!strTemps[0].trim().equals(""))
            {
                doc.insertString(doc.getLength(),"Tôi: " + strTemps[0] + "\n" , me);
                doc.setParagraphAttributes(doc.getLength(), 1, me, false);
            }
            else
            {
                doc.insertString(doc.getLength(),"Tôi:" , me);
                doc.setParagraphAttributes(doc.getLength(), 1, me, false);
            }
            if (strTemps.length > 1)
                for (int i =1; i< strTemps.length; i++)
                {
                    if (strTemps[i].trim().equals("")) continue;
                    doc.insertString(doc.getLength()," " + strTemps[i] + "\n" , me);
                    doc.setParagraphAttributes(doc.getLength(), 1, me, false);
                }
                      
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error" , JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ChatUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error" , JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ChatUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SENDbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SENDbutton;
    private javax.swing.JTextArea chatF;
    private javax.swing.JLabel coderoom;
    private javax.swing.JTextPane displayChatPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nametxt;
    // End of variables declaration//GEN-END:variables
}
